@*<div class="row mb-2 border-top pt-2">
    <div class="col-2"><img class="img-fluid" src="@post.cover_image" /></div>
    <div class="col-6 d-flex flex-column">
        <small class="text-muted">@post.created.ToShortDateString()</small>
        <h5>@post.title</h5>
        @((MarkupString)post.description)
    </div>
    <div class="col-4">
        <div class="d-flex justify-content-between">
            <div>
                <div class="dropdown">
                    <button class="btn btn-light btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                        @post.type.ToString()
                    </button>
                    <div class="dropdown-menu">
                        <button class="dropdown-item">Новость</button>
                        <button class="dropdown-item">Статья</button>
                        <button class="dropdown-item">Объявление</button>
                        <button class="dropdown-item">Видео</button>
                    </div>
                </div>
                <div class="dropdown">
                    <button class="btn btn-light btn-sm dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                        @post.published
                    </button>
                    <div class="dropdown-menu">
                        <button class="dropdown-item">Опубликовано</button>
                        <button class="dropdown-item">Неопубликовано</button>
                    </div>
                </div>
            </div>
            <div>
                <button class="btn btn-light mr-1" title="изменить"><i class="fas fa-pencil-alt"></i></button>
                <button class="btn btn-light" title="удалить"><i class="fas fa-trash text-danger"></i></button>
            </div>
        </div>
    </div>
</div>*@

@inject blazorControlPanel.Services.IPostsServise PostsService 

<EditForm Model="post">
    <div class="row mb-2 border-top pt-2">
        <div class="col-2"><img class="img-fluid" src="@post.cover_image" /></div>
        <div class="col-6 d-flex flex-column">
            <small class="text-muted">@post.created.ToShortDateString()</small>
            <h5>@post.title</h5>
            @((MarkupString)post.description)
        </div>
        <div class="col-4">
                <div class="btn-group">
                    <select class="btn btn-light" @bind="тип_публикации" title="Тип публикации">
                        @foreach (var t in type.GetNames(typeof(type)).ToList())
                        {
                            <option class="bg-light">@t</option>
                        }
                    </select>
                    <select class="btn btn-light" @bind="публикация_опубликована" title="Опубликована/Неопубликована">
                        <option class="bg-light" value="true">Опубликована</option>
                        <option class="bg-light" value="false">Неопубликована</option>
                    </select>

                    <button class="btn btn-light" title="Изменить"><i class="fas fa-pencil-alt"></i></button>
                    <button class="btn btn-light" title="Удалить" @onclick="удалить_публикацию"><i class="fas fa-trash text-danger"></i></button>
                </div>
        </div>
    </div>
</EditForm>



@code {
    [Parameter]
    public post post { get; set; }

    string тип_публикации
    {
        get
        {
            return post.type.ToString();
        }
        set
        {
            post.type = Enum.Parse<type>(value);
            PostsService.update(post);
        }
    }

    string публикация_опубликована
    {
        get {
            if (post.published) { return "true"; }
            else { return "false"; }
        }
        set
        {
            if (value == "true") { post.published = true; }
            else { post.published = false; }
            PostsService.update(post);
        }
    }

    void удалить_публикацию()
    {
        PostsService.delete(post.ID);
    }
}
