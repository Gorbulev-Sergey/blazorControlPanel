@page "/posts/create"
@attribute [Authorize(Roles = "администратор")]
@inject IPostsServise PostsService
@inject IViewBag ViewBag
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime


<div class="d-flex justify-content-between align-items-center mb-3">
    @*Заголовок страницы*@
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link active" id="list-home-list" data-toggle="pill" href="#list-home">Обложка</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="list-content-list" data-toggle="pill" href="#list-content">Содержимое</a>
        </li>
    </ul>
    @*Кнопки сохранения и отмены*@
    <div class="form-group mb-0">
        <a class="btn btn-secondary" href="/posts">Отмена</a>
        <input type="button" value="Сохранить" class="btn btn-primary" @onclick="()=>сохранить()" />
    </div>
</div>

<EditForm Model="post">
    <div class="tab-content" id="nav-tabContent">
        @*Обложка публикации*@
        <div class="tab-pane fade show active" id="list-home">
            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        <input @bind="post.title" class="form-control" placeholder="Название" />
                    </div>
                    <div class="form-group">
                        <textarea @bind="post.description" rows="4" class="form-control" placeholder="Краткое описание" />
                    </div>
                    <div class="form-group">
                        <div class="form-check">
                            <input id="is_published" class="form-check-input bg-dark" type="checkbox" value="false" @bind="post.published">
                            <label for="is_published" class="form-check-label">Опубликовать</label>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <select class="form-control" @bind="тип_публикации" title="Тип публикации">
                            @foreach (var t in type.GetNames(typeof(type)).ToList())
                            {
                                <option class="bg-light">@t</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <input @bind="post.cover_image" class="form-control" placeholder="Url обложки" />
                        <img class="card-img mt-3" src="@post.cover_image" />
                    </div>
                </div>
            </div>
        </div>
        @*Содержимое публикации*@
        <div class="tab-pane fade" id="list-content">
            <div class="form-group">
                <Editor></Editor>
            </div>
            <div class="form-group">
                <div id="editor" class="form-control h-auto" style="min-height:300px" contenteditable="true"></div>
            </div>
        </div>
    </div>
</EditForm>



@code {
    [Parameter]
    public int ID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ViewBag.заголовок_страницы = "Создать публикацию";
    }

    public post post = new post();
    async Task сохранить()
    {
        post.content = await JSRuntime.InvokeAsync<string>("editor_html", "#editor");
        //post.content = await JSRuntime.InvokeAsync<string>("content_html", null);
        await PostsService.create(post);
        NavigationManager.NavigateTo("/posts");
    }
    string тип_публикации
    {
        get
        {
            return post.type.ToString();
        }
        set
        {
            post.type = Enum.Parse<type>(value);
        }
    }
}
